{"version":3,"sources":["components/navbar.component.js","components/phonelog.component.js","components/addDetails.component.js","components/updatecontact.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","Logs","props","log","fullname","phonenumber","email_id","dob","_id","href","onClick","deleteContact","phoneBookLog","bind","state","logs","axios","get","then","res","setState","data","id","delete","console","this","filter","el","map","currlogs","key","contactList","AddDetails","onChangeFullName","onChangePhoneNumber","onChnageEmailId","onChangeDob","onSubmit","Date","e","target","value","preventDefault","phonebook","post","window","location","type","required","onChange","selected","UpdateContact","match","params","catch","error","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b42c43eb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Navbar extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <nav className = \"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n                <Link to = \"/\" className = \"navbar-brand\">Phones Book</Link>\r\n                <div className = \"collpase navbar-collapse\">\r\n                    <ul className = \"navbar-nav mr-auto\">\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/\" className=\"nav-link\">Phone Book logs</Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                        <Link to=\"/add\" className=\"nav-link\">Add contact details</Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                        <Link to=\"/update\" className=\"nav-link\">Update contact details</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Logs = props => (\r\n    <tr>\r\n        <td>{props.log.fullname}</td>\r\n        <td>{props.log.phonenumber}</td>\r\n        <td>{props.log.email_id}</td>\r\n        <td>{props.log.dob}</td>\r\n        <td>\r\n            <Link to={\"/update/\"+props.log._id}>update</Link> | <a href=\"#\" onClick={() => {props.deleteContact(props.log._id) }}>Delete</a>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\n\r\n\r\n\r\n\r\nclass phoneBookLog extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.deleteContact = this.deleteContact.bind(this)\r\n\r\n        this.state ={\r\n            logs :[]\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/phoneBook/')\r\n        .then(res => {\r\n            this.setState({\r\n                logs : res.data\r\n            })\r\n        })\r\n    }\r\n\r\n    deleteContact(id) {\r\n        axios.delete('http://localhost:4000/phoneBook/'+id)\r\n        .then(res => {console.log(res.data)});\r\n\r\n        this.setState({\r\n            logs : this.state.logs.filter(el => el._id !== id)\r\n        })\r\n    }\r\n\r\n    contactList() {\r\n        return this.state.logs.map(currlogs => {\r\n            return <Logs log = {currlogs} deleteContact={this.deleteContact} key={currlogs._id} />\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Phone Book all contacts list</h2>\r\n                <table className = \"table\">\r\n                    <thead className = \"thead-light\">\r\n                        <tr>\r\n                            <th>Full Name</th>\r\n                            <th>Phone Number's</th>\r\n                            <th>Email Id's</th>\r\n                            <th>Date of Birth</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { this.contactList()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default phoneBookLog","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass AddDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeFullName = this.onChangeFullName.bind(this);\r\n        this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\r\n        this.onChnageEmailId = this.onChnageEmailId.bind(this);\r\n        this.onChangeDob = this.onChangeDob.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            fullname : '',\r\n            phonenumber : '',\r\n            email_id : '',\r\n            dob : new Date()\r\n        }\r\n    }\r\n\r\n\r\n    onChangeFullName(e) {\r\n        this.setState({\r\n            fullname : e.target.value\r\n        })\r\n    }\r\n\r\n    onChangePhoneNumber(e) {\r\n        this.setState({\r\n            phonenumber : e.target.value\r\n        })\r\n    }\r\n\r\n    onChnageEmailId(e) {\r\n        this.setState({\r\n            email_id : e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDob(dob) {\r\n        this.setState({\r\n            dob : dob\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const phonebook = {\r\n            fullname : this.state.fullname,\r\n            phonenumber : this.state.phonenumber,\r\n            email_id : this.state.email_id,\r\n            dob : this.state.dob\r\n        }\r\n\r\n\r\n        console.log(phonebook);\r\n\r\n        axios.post('http://localhost:4000/phoneBook/add', phonebook)\r\n        .then(res => console.log(res.data));\r\n\r\n        window.location = '/';\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h3>Add details in the phone Book ---</h3>\r\n                <br />\r\n                <form onSubmit = {this.onSubmit}>\r\n                    <div className = \"from-group\">\r\n                        <label>Full Name</label>\r\n                        <input type=\"text\" required className=\"form-control\" value={this.state.fullname} onChange={this.onChangeFullName} />\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Phone Numer</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.phonenumber} onChange={this.onChangePhoneNumber} />\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Email Id</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.email_id} onChange={this.onChnageEmailId} />\r\n                    </div>\r\n                    <div className=\"from-group\">\r\n                        <label>Date of Birth</label>\r\n                        <div>\r\n                            <DatePicker selected={this.state.dob} onChange={this.onChangeDob} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\"></div>\r\n                    <input type=\"submit\" value =\"Add details to phones book\" className=\"btn btn-primary\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AddDetails","  \r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass UpdateContact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeFullName = this.onChangeFullName.bind(this);\r\n        this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\r\n        this.onChnageEmailId = this.onChnageEmailId.bind(this);\r\n        this.onChangeDob = this.onChangeDob.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n\r\n        this.state = {\r\n            fullname : '',\r\n            phonenumber : '',\r\n            email_id : '',\r\n            dob : new Date()\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/phoneBook/'+this.props.match.params.id)\r\n        .then(res => {\r\n            this.setState({\r\n                fullname : res.data.fullname,\r\n                phonenumber : res.data.phonenumber,\r\n                email_id : res.data.email_id,\r\n                dob : res.data.dob\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    onChangeFullName(e) {\r\n        this.setState({\r\n            fullname : e.target.value\r\n        })\r\n    }\r\n\r\n    onChangePhoneNumber(e) {\r\n        this.setState({\r\n            phonenumber : e.target.value\r\n        })\r\n    }\r\n\r\n    onChnageEmailId(e) {\r\n        this.setState({\r\n            email_id : e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDob(dob) {\r\n        this.setState({\r\n            dob : dob\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const phonebook = {\r\n            fullname : this.state.fullname,\r\n            phonenumber : this.state.phonenumber,\r\n            email_id : this.state.email_id,\r\n            dob : this.state.dob\r\n        }\r\n\r\n\r\n        console.log(phonebook);\r\n        axios.post('http://localhost:4000/phoneBook/update/'+this.props.match.params.id, phonebook)\r\n        .then(res => console.log(res.data));\r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h3>Add details in the phone Book ---</h3>\r\n                <br />\r\n                <form onSubmit = {this.onSubmit}>\r\n                    <div className = \"from-group\">\r\n                        <label>Full Name</label>\r\n                        <input type=\"text\" required className=\"form-control\" value={this.state.fullname} onChange={this.onChangeFullName} />\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Phone Numer</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.phonenumber} onChange={this.onChangePhoneNumber} />\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Email Id</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.email_id} onChange={this.onChnageEmailId} />\r\n                    </div>\r\n                    <div className=\"from-group\">\r\n                        <label>Date of Birth</label>\r\n                        <div>\r\n                            <DatePicker selected={this.state.dob} onChange={this.onChangeDob} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\"></div>\r\n                    <input type=\"submit\" value =\"Update details to phones book\" className=\"btn btn-primary\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default UpdateContact","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport Navbar from './components/navbar.component';\nimport phoneBookLog from './components/phonelog.component';\nimport AddDetails from './components/addDetails.component';\nimport UpdateContact from './components/updatecontact.component';\n\nfunction App() {\n  return (\n    <Router>\n      <div className = \"container\">\n        <Navbar />\n        <br />\n        <Route path = \"/\" exact component={phoneBookLog} />\n        <Route path = \"/add\" component={AddDetails} />\n        <Route path = \"/update\" component={UpdateContact} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}